{"type":"cell","id":"00b39b","pos":11,"input":"testlib.list_symbols()","output":{"0":{"data":{"text/plain":"['AAPL', 'TESTDATA', 'data1', 'futuresfills']"},"output_type":"execute_result","exec_count":14}},"cell_type":"code","exec_count":14}
{"type":"cell","id":"062830","pos":10,"input":"testlib.read('AAPL').data[1:4]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Volume</th>\n      <th>Ex-Dividend</th>\n      <th>Split Ratio</th>\n      <th>Adj. Open</th>\n      <th>Adj. High</th>\n      <th>Adj. Low</th>\n      <th>Adj. Close</th>\n      <th>Adj. Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-15</th>\n      <td>27.38</td>\n      <td>27.38</td>\n      <td>27.25</td>\n      <td>27.25</td>\n      <td>785200.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.402563</td>\n      <td>0.402563</td>\n      <td>0.400652</td>\n      <td>0.400652</td>\n      <td>43971200.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-16</th>\n      <td>25.37</td>\n      <td>25.37</td>\n      <td>25.25</td>\n      <td>25.25</td>\n      <td>472000.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.373010</td>\n      <td>0.373010</td>\n      <td>0.371246</td>\n      <td>0.371246</td>\n      <td>26432000.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-17</th>\n      <td>25.87</td>\n      <td>26.00</td>\n      <td>25.87</td>\n      <td>25.87</td>\n      <td>385900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.380362</td>\n      <td>0.382273</td>\n      <td>0.380362</td>\n      <td>0.380362</td>\n      <td>21610400.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":13}},"cell_type":"code","exec_count":13}
{"type":"cell","id":"071088","pos":15,"input":"testlib.read('AAPL').data","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Volume</th>\n      <th>Ex-Dividend</th>\n      <th>Split Ratio</th>\n      <th>Adj. Open</th>\n      <th>Adj. High</th>\n      <th>Adj. Low</th>\n      <th>Adj. Close</th>\n      <th>Adj. Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-15</th>\n      <td>27.38</td>\n      <td>27.38</td>\n      <td>27.25</td>\n      <td>27.25</td>\n      <td>785200.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.402563</td>\n      <td>0.402563</td>\n      <td>0.400652</td>\n      <td>0.400652</td>\n      <td>43971200.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-16</th>\n      <td>25.37</td>\n      <td>25.37</td>\n      <td>25.25</td>\n      <td>25.25</td>\n      <td>472000.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.373010</td>\n      <td>0.373010</td>\n      <td>0.371246</td>\n      <td>0.371246</td>\n      <td>26432000.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-17</th>\n      <td>25.87</td>\n      <td>26.00</td>\n      <td>25.87</td>\n      <td>25.87</td>\n      <td>385900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.380362</td>\n      <td>0.382273</td>\n      <td>0.380362</td>\n      <td>0.380362</td>\n      <td>21610400.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-18</th>\n      <td>26.63</td>\n      <td>26.75</td>\n      <td>26.63</td>\n      <td>26.63</td>\n      <td>327900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.391536</td>\n      <td>0.393300</td>\n      <td>0.391536</td>\n      <td>0.391536</td>\n      <td>18362400.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":18}},"cell_type":"code","exec_count":18}
{"type":"cell","id":"0e7263","pos":21,"input":"allFills_futures = pd.read_csv('/home/user/allFills_futures.csv')\n\n","cell_type":"code","exec_count":24}
{"type":"cell","id":"0fa487","pos":25,"input":"1+1","cell_type":"code","exec_count":0}
{"type":"cell","id":"0ffb7f","pos":0,"input":"# !pip3 install git+https://github.com/manahl/arctic.git\n# Start mongo in terminal: mongod --dbpath /home/user/<mongo_data>/\n    \nfrom arctic import Arctic\nimport quandl\nimport pandas as pd","cell_type":"code","exec_count":4}
{"type":"cell","id":"1d67b9","pos":19,"input":"# Add some one one (miss out a bunch of columns)\ntestlib.write('AAPL', aapl.iloc[5:7,:4])","output":{"0":{"data":{"text/plain":"VersionedItem(symbol=AAPL,library=arctic.test,data=<class 'NoneType'>,version=53,metadata=None"},"output_type":"execute_result","exec_count":22}},"cell_type":"code","exec_count":22}
{"type":"cell","id":"1fdafb","pos":6,"input":"# What symbols (keys) are stored in the library\ntestlib.list_symbols()","output":{"0":{"data":{"text/plain":"['AAPL', 'TESTDATA', 'data1', 'futuresfills']"},"output_type":"execute_result","exec_count":9}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"2aa780","pos":24,"input":"z = testlib.read('futuresfills')\nz.data.size()\n\n\nhead()","output":{"0":{"ename":"TypeError","evalue":"'numpy.int64' object is not callable","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-e0abc38ad668>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtestlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'futuresfills'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mz\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'numpy.int64' object is not callable"]}},"cell_type":"code","exec_count":27}
{"type":"cell","id":"2e7b22","pos":17,"input":"# Check the data\ntestlib.read('AAPL').data","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Volume</th>\n      <th>Ex-Dividend</th>\n      <th>Split Ratio</th>\n      <th>Adj. Open</th>\n      <th>Adj. High</th>\n      <th>Adj. Low</th>\n      <th>Adj. Close</th>\n      <th>Adj. Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-15</th>\n      <td>27.38</td>\n      <td>27.38</td>\n      <td>27.25</td>\n      <td>27.25</td>\n      <td>785200.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.402563</td>\n      <td>0.402563</td>\n      <td>0.400652</td>\n      <td>0.400652</td>\n      <td>43971200.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-16</th>\n      <td>25.37</td>\n      <td>25.37</td>\n      <td>25.25</td>\n      <td>25.25</td>\n      <td>472000.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.373010</td>\n      <td>0.373010</td>\n      <td>0.371246</td>\n      <td>0.371246</td>\n      <td>26432000.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-17</th>\n      <td>25.87</td>\n      <td>26.00</td>\n      <td>25.87</td>\n      <td>25.87</td>\n      <td>385900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.380362</td>\n      <td>0.382273</td>\n      <td>0.380362</td>\n      <td>0.380362</td>\n      <td>21610400.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-18</th>\n      <td>26.63</td>\n      <td>26.75</td>\n      <td>26.63</td>\n      <td>26.63</td>\n      <td>327900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.391536</td>\n      <td>0.393300</td>\n      <td>0.391536</td>\n      <td>0.391536</td>\n      <td>18362400.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-19</th>\n      <td>28.25</td>\n      <td>28.38</td>\n      <td>28.25</td>\n      <td>28.25</td>\n      <td>217100.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.415355</td>\n      <td>0.417266</td>\n      <td>0.415355</td>\n      <td>0.415355</td>\n      <td>12157600.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":20}},"cell_type":"code","exec_count":20}
{"type":"cell","id":"380340","pos":2,"input":"\n# Create the library - defaults to VersionStore\n# store.initialize_library('NASDAQ')\nstore.initialize_library('test')\n\n# Access the library\n# library = store['NASDAQ']\ntestlib = store['test']\n\n# Load some data - maybe from Quandl\n# aapl = quandl.get(\"WIKI/AAPL\", authtoken=\"your token here\")\ntestdata = pd.DataFrame({\n        'a': [1,2,3,4,5],\n        'b': ['a', 'a', 'b', 'a', 'c']\n    })\n\nquandlAPIkey = 'rkeazqH5yf2RspNwACei'\n\n# Store the data in the library\n# library.write('AAPL', aapl, metadata={'source': 'Quandl'})\ntestlib.write('data1', testdata, metadata={'source': 'completely made up'})\n\n\n# Load some data - maybe from Quandl\naapl = quandl.get(\"WIKI/AAPL\", authtoken=quandlAPIkey)\n\n# Store the data in the library\ntestlib.write(\"AAPL\", aapl, metadata={'source': 'Quandl'})\n\n# Reading the data\nitem1 = testlib.read('AAPL')\naapl = item1.data\nmetadata = item1.metadata\n\n\n\n# Reading the data\n#item = library.read('AAPL')\nitem2 = testlib.read('data1')\ndata1 = item2.data\nmetadata = item2.metadata\n\n\n","output":{"0":{"name":"stderr","output_type":"stream","text":"Library created, but couldn't enable sharding: no such command: 'enablesharding', bad cmd: '{ enablesharding: \"arctic\", lsid: { id: UUID(\"062b9ce4-f5be-4366-857a-d6376a07b058\") }, $readPreference: { mode: \"secondaryPreferred\" }, $db: \"admin\" }'. This is OK if you're not 'admin'\n"}},"cell_type":"code","exec_count":6}
{"type":"cell","id":"3a805f","pos":20,"input":"testlib.read('AAPL').data","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-19</th>\n      <td>28.25</td>\n      <td>28.38</td>\n      <td>28.25</td>\n      <td>28.25</td>\n    </tr>\n    <tr>\n      <th>1980-12-22</th>\n      <td>29.63</td>\n      <td>29.75</td>\n      <td>29.63</td>\n      <td>29.63</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":23}},"cell_type":"code","exec_count":23}
{"type":"cell","id":"45bce8","pos":27,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"4f740d","pos":3,"input":"# What symbols (keys) are stored in the library\ntestlib.list_symbols()","output":{"0":{"data":{"text/plain":"['AAPL', 'TESTDATA', 'data1', 'futuresfills']"},"output_type":"execute_result","exec_count":7}},"cell_type":"code","exec_count":7}
{"type":"cell","id":"54c69a","pos":9,"input":"aapl.iloc[:2]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Volume</th>\n      <th>Ex-Dividend</th>\n      <th>Split Ratio</th>\n      <th>Adj. Open</th>\n      <th>Adj. High</th>\n      <th>Adj. Low</th>\n      <th>Adj. Close</th>\n      <th>Adj. Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-12</th>\n      <td>28.75</td>\n      <td>28.87</td>\n      <td>28.75</td>\n      <td>28.75</td>\n      <td>2093900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.422706</td>\n      <td>0.424470</td>\n      <td>0.422706</td>\n      <td>0.422706</td>\n      <td>117258400.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-15</th>\n      <td>27.38</td>\n      <td>27.38</td>\n      <td>27.25</td>\n      <td>27.25</td>\n      <td>785200.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.402563</td>\n      <td>0.402563</td>\n      <td>0.400652</td>\n      <td>0.400652</td>\n      <td>43971200.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":12}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"75bc85","pos":16,"input":"# Write the same data + one day\ntestlib.write('AAPL', aapl.iloc[1:6])","output":{"0":{"data":{"text/plain":"VersionedItem(symbol=AAPL,library=arctic.test,data=<class 'NoneType'>,version=52,metadata=None"},"output_type":"execute_result","exec_count":19}},"cell_type":"code","exec_count":19}
{"type":"cell","id":"89383b","pos":8,"input":"# Version\ntestlib.read('TESTDATA').version","output":{"0":{"data":{"text/plain":"1"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11,"scrolled":true}
{"type":"cell","id":"982f4b","pos":4,"input":"# Additional stuff\n# Find available versions of a symbol\nlist(testlib.list_versions('data1'))","output":{"0":{"data":{"text/plain":"[{'date': datetime.datetime(2018, 2, 5, 3, 13, 34, tzinfo=tzfile('/usr/share/zoneinfo/Etc/UTC')),\n  'deleted': False,\n  'snapshots': [],\n  'symbol': 'data1',\n  'version': 15},\n {'date': datetime.datetime(2018, 2, 5, 3, 10, 39, tzinfo=tzfile('/usr/share/zoneinfo/Etc/UTC')),\n  'deleted': False,\n  'snapshots': [],\n  'symbol': 'data1',\n  'version': 14},\n {'date': datetime.datetime(2018, 2, 5, 0, 25, 35, tzinfo=tzfile('/usr/share/zoneinfo/Etc/UTC')),\n  'deleted': False,\n  'snapshots': [],\n  'symbol': 'data1',\n  'version': 13},\n {'date': datetime.datetime(2018, 1, 27, 8, 18, 48, tzinfo=tzfile('/usr/share/zoneinfo/Etc/UTC')),\n  'deleted': False,\n  'snapshots': ['snapshot_name'],\n  'symbol': 'data1',\n  'version': 7}]"},"output_type":"execute_result","exec_count":8}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"a4df30","pos":12,"input":"testlib.write('AAPL', aapl.iloc[:2])","output":{"0":{"data":{"text/plain":"VersionedItem(symbol=AAPL,library=arctic.test,data=<class 'NoneType'>,version=50,metadata=None"},"output_type":"execute_result","exec_count":15}},"cell_type":"code","exec_count":15}
{"type":"cell","id":"ba8109","pos":23,"input":"# Write the same data + one day\ntestlib.write('futuresfills', allFills_futures)","output":{"0":{"data":{"text/plain":"VersionedItem(symbol=futuresfills,library=arctic.test,data=<class 'NoneType'>,version=3,metadata=None"},"output_type":"execute_result","exec_count":26}},"cell_type":"code","exec_count":26}
{"type":"cell","id":"d21fc2","pos":1,"input":"# Connect to Local MONGODB\nstore = Arctic('localhost')\nstore","output":{"0":{"data":{"text/plain":"<Arctic at 0x7fee5729de10, connected to MongoClient(host=['localhost:27017'], document_class=dict, tz_aware=False, connect=True, sockettimeoutms=600000, connecttimeoutms=2000, serverselectiontimeoutms=30000, maxpoolsize=4)>"},"output_type":"execute_result","exec_count":5}},"cell_type":"code","exec_count":5,"scrolled":true}
{"type":"cell","id":"d6cba0","pos":18,"input":"aapl_melted  = pd.melt(aapl.reset_index(), id_vars=['Date'], value_vars=['Open', 'High', 'Low','Close'])\naapl_melted.head()\n","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>variable</th>\n      <th>value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1980-12-12</td>\n      <td>Open</td>\n      <td>28.75</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1980-12-15</td>\n      <td>Open</td>\n      <td>27.38</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1980-12-16</td>\n      <td>Open</td>\n      <td>25.37</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1980-12-17</td>\n      <td>Open</td>\n      <td>25.87</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1980-12-18</td>\n      <td>Open</td>\n      <td>26.63</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":21}},"cell_type":"code","exec_count":21}
{"type":"cell","id":"d9819e","pos":13,"input":"testlib.read('AAPL').data","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Close</th>\n      <th>Volume</th>\n      <th>Ex-Dividend</th>\n      <th>Split Ratio</th>\n      <th>Adj. Open</th>\n      <th>Adj. High</th>\n      <th>Adj. Low</th>\n      <th>Adj. Close</th>\n      <th>Adj. Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1980-12-12</th>\n      <td>28.75</td>\n      <td>28.87</td>\n      <td>28.75</td>\n      <td>28.75</td>\n      <td>2093900.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.422706</td>\n      <td>0.424470</td>\n      <td>0.422706</td>\n      <td>0.422706</td>\n      <td>117258400.0</td>\n    </tr>\n    <tr>\n      <th>1980-12-15</th>\n      <td>27.38</td>\n      <td>27.38</td>\n      <td>27.25</td>\n      <td>27.25</td>\n      <td>785200.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.402563</td>\n      <td>0.402563</td>\n      <td>0.400652</td>\n      <td>0.400652</td>\n      <td>43971200.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":16}},"cell_type":"code","exec_count":16}
{"type":"cell","id":"e2de62","pos":7,"input":"testlib.delete('data2')","cell_type":"code","exec_count":10}
{"type":"cell","id":"eb7c51","pos":5,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"ebaff0","pos":14,"input":"testlib.write('AAPL', aapl.iloc[1:5])","output":{"0":{"data":{"text/plain":"VersionedItem(symbol=AAPL,library=arctic.test,data=<class 'NoneType'>,version=51,metadata=None"},"output_type":"execute_result","exec_count":17}},"cell_type":"code","exec_count":17}
{"type":"cell","id":"ee04c8","pos":26,"input":"whos","output":{"0":{"name":"stdout","output_type":"stream","text":"Variable           Type             Data/Info\n---------------------------------------------\nArctic             type             <class 'arctic.arctic.Arctic'>\naapl               DataFrame                       Open      <...>n[9364 rows x 12 columns]\naapl_melted        DataFrame                    Date variable<...>n[37456 rows x 3 columns]\nallFills_futures   DataFrame                OrderNumber bbgTi<...>165760 rows x 21 columns]\ndata1              DataFrame               a  b\\nindex      \\<...>n3      4  a\\n4      5  c\nitem1              VersionedItem    VersionedItem(symbol=AAPL<...>data={'source': 'Quandl'}\nitem2              VersionedItem    VersionedItem(symbol=data<...>e': 'completely made up'}\nmetadata           dict             n=1\npd                 module           <module 'pandas' from '/u<...>ages/pandas/__init__.py'>\nquandl             module           <module 'quandl' from '/u<...>ages/quandl/__init__.py'>\nquandlAPIkey       str              rkeazqH5yf2RspNwACei\nstore              Arctic           <Arctic at 0x7fee5729de10<...>ms=30000, maxpoolsize=4)>\ntestdata           DataFrame           a  b\\n0  1  a\\n1  2  a<...>2  3  b\\n3  4  a\\n4  5  c\ntestlib            VersionStore     <VersionStore at 0x7fee55<...>ms=30000, maxpoolsize=4)>\nz                  VersionedItem    VersionedItem(symbol=futu<...>>,version=3,metadata=None\n"}},"cell_type":"code","exec_count":30}
{"type":"cell","id":"fa7f7b","pos":22,"input":"allFills_futures.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>OrderNumber</th>\n      <th>bbgTicker</th>\n      <th>Exchange</th>\n      <th>buySell</th>\n      <th>TraderName</th>\n      <th>ExecInstruction</th>\n      <th>Broker</th>\n      <th>ExecFilledAmount</th>\n      <th>dateTime</th>\n      <th>ExecTime</th>\n      <th>...</th>\n      <th>ExecAsOfTime</th>\n      <th>volume</th>\n      <th>price</th>\n      <th>ExecAvgPrice</th>\n      <th>bbgMktID</th>\n      <th>ExecType</th>\n      <th>ExecSeqNumber</th>\n      <th>ExecPrevSeqNumber</th>\n      <th>bbgCode</th>\n      <th>timeZone</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3435484.0</td>\n      <td>CLU5</td>\n      <td>NYM</td>\n      <td>1</td>\n      <td>ATOWERS2</td>\n      <td></td>\n      <td>MACD</td>\n      <td>67.0</td>\n      <td>736161.196748</td>\n      <td>0.196748</td>\n      <td>...</td>\n      <td>0.196528</td>\n      <td>67.0</td>\n      <td>52.449552</td>\n      <td>52.449552</td>\n      <td>Comdty</td>\n      <td>FILL</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>CLU5 Comdty</td>\n      <td>Australia/Brisbane</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3435485.0</td>\n      <td>W H6</td>\n      <td>CBT</td>\n      <td>-1</td>\n      <td>ATOWERS2</td>\n      <td></td>\n      <td>MACD</td>\n      <td>116.0</td>\n      <td>736161.188646</td>\n      <td>0.188646</td>\n      <td>...</td>\n      <td>0.187500</td>\n      <td>116.0</td>\n      <td>577.960938</td>\n      <td>577.960938</td>\n      <td>Comdty</td>\n      <td>FILL</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>W H6 Comdty</td>\n      <td>Australia/Brisbane</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3435486.0</td>\n      <td>CLM6</td>\n      <td>NYM</td>\n      <td>1</td>\n      <td>ATOWERS2</td>\n      <td></td>\n      <td>MACD</td>\n      <td>40.0</td>\n      <td>736161.196956</td>\n      <td>0.196956</td>\n      <td>...</td>\n      <td>0.196528</td>\n      <td>40.0</td>\n      <td>56.004750</td>\n      <td>56.004750</td>\n      <td>Comdty</td>\n      <td>FILL</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>CLM6 Comdty</td>\n      <td>Australia/Brisbane</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3435487.0</td>\n      <td>CLZ5</td>\n      <td>NYM</td>\n      <td>-1</td>\n      <td>ATOWERS2</td>\n      <td></td>\n      <td>MACD</td>\n      <td>177.0</td>\n      <td>736161.197187</td>\n      <td>0.197187</td>\n      <td>...</td>\n      <td>0.196528</td>\n      <td>177.0</td>\n      <td>53.831130</td>\n      <td>53.831130</td>\n      <td>Comdty</td>\n      <td>FILL</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>CLZ5 Comdty</td>\n      <td>Australia/Brisbane</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3435488.0</td>\n      <td>LCG6</td>\n      <td>CME</td>\n      <td>-1</td>\n      <td>ATOWERS2</td>\n      <td></td>\n      <td>MACD</td>\n      <td>51.0</td>\n      <td>736161.165370</td>\n      <td>0.165370</td>\n      <td>...</td>\n      <td>0.164583</td>\n      <td>51.0</td>\n      <td>152.856863</td>\n      <td>152.856863</td>\n      <td>Comdty</td>\n      <td>FILL</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>LCG6 Comdty</td>\n      <td>Australia/Brisbane</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 21 columns</p>\n</div>"},"output_type":"execute_result","exec_count":25}},"cell_type":"code","exec_count":25}
{"type":"file","last_load":1520755740045}
{"type":"settings","backend_state":"running","kernel":"python3","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.2"}},"kernel_usage":{"cpu":0,"memory":88207360},"kernel_state":"idle"}